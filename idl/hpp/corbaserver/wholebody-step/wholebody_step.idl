// Copyright (C) 2011,2012 CNRS-LAAS
// Author: Sebastien Dalibard.
//
// This file is part of the hpp-wholebody-step-corba.
//
// hpp-wholebody-step-corba is free software: you can redistribute
// it and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation, either
// version 3 of the License, or (at your option) any later version.
//
// hpp-wholebody-step-corba is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with hpp-wholebody-step-corba.  If not, see
// <http://www.gnu.org/licenses/>.

module hpp {
  /// \brief Robot configuration is defined by a sequence of dof value.
  typedef sequence<double> dofSeq;
  typedef sequence<dofSeq> dofSeqSeq;

  interface WholebodyStep {
    /// Set static stability constraints to robot
    short addStaticStabilityConstraints (in dofSeq dofArray);
    /// Generate a goal configuration.
    /// \param x, y, z: desired position of the end effector (right hand)
    /// \param nbConfig Number of goal configurations to generate.
    short generateGoalConfig (in double x, in double y, in double z,
			      in unsigned short nbConfig);
  }; //interface WholebodyStep
}; // module hpp